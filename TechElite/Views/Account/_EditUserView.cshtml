@model TechElite.Models.UserViewModel

@using Microsoft.AspNetCore.Identity;
@using TechElite.Areas.Identity.Data;

<h2>Redigera användare</h2>

@using (Html.BeginForm("Index", "Account", FormMethod.Post, new { id = "editUserForm" }))
{
    @*     @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Spara</button>
    </div>
}
<script>
    document.getElementById("edit-user-form").addEventListener("submit", function (e) {
        e.preventDefault();

        const form = e.target;
        const formData = new FormData(form);

        fetch(form.action, {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                // Optionally reload the user list or update the UI
            } else {
                // Replace the form with the updated partial view (if validation errors exist)
                form.parentElement.innerHTML = data;
            }
        })
        .catch(error => {
            console.error("Error:", error);
            alert("An error occurred while saving the user.");
        });
    });
</script>